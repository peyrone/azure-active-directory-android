apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

allprojects {
    repositories {
        mavenCentral()
        google()
        mavenLocal()
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") : project.findProperty("vstsUsername")
                password System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")
            }
        }
        jcenter()
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }

    signingConfigs {
        debug {
            storeFile file("../gradle/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "$dependencySources.kotlin"

    implementation "$dependencySources.appcompat"
    implementation "$dependencySources.coreKtx"
    implementation "$dependencySources.contraintLayout"
    testImplementation "$dependencySources.junit"
    androidTestImplementation "$dependencySources.extJunit"
    androidTestImplementation "$dependencySources.espressoCore"

    implementation "$dependencySources.volley"

    if (findProject(':msal') != null) {
        // For developer team only.
        localImplementation project(':msal')
        externalImplementation 'com.microsoft.identity.client:msal:1.2.+'
    }
    else {
        // Downloads and Builds MSAL from maven central.
        implementation 'com.microsoft.identity.client:msal:1.2.+'
    }
}
